name: Deploy MultiK8s on AWS EKS
on:
  push:
    branches:
      - master

env:
  SHA: $(git rev-parse HEAD)

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install kubectl
        uses: azure/setup-kubectl@v2.0
        with:
          version: 'v1.24.0' # default is latest stable
        id: install

      - name: Test
        run: |-
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t shivisis/react-test -f ./client/Dockerfile.dev ./client
          docker run -e CI=true shivisis/react-test npm test

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} 
          aws-region: eu-west-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
  
      - name: Build, tag, and push docker image to Amazon ECR
        env:
            REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            REPOSITORY: multi-k8s
        run: |
            docker build -t $REGISTRY/$REPOSITORY:latest -t $REGISTRY/$REPOSITORY:${{ env.SHA }} -f ./client/Dockerfile ./client
            docker push $REGISTRY/$REPOSITORY:latest 
            docker push $REGISTRY/$REPOSITORY:${{ env.SHA }}
            docker build -t $REGISTRY/$REPOSITORY:latest -t $REGISTRY/$REPOSITORY:${{ env.SHA }} -f ./server/Dockerfile ./server
            docker push $REGISTRY/$REPOSITORY:latest
            docker push $REGISTRY/$REPOSITORY:${{ env.SHA }}
            docker build -t $REGISTRY/$REPOSITORY:latest -t $REGISTRY/$REPOSITORY:${{ env.SHA }} -f ./worker/Dockerfile ./worker
            docker push $REGISTRY/$REPOSITORY:latest
            docker push $REGISTRY/$REPOSITORY:${{ env.SHA }}

      - name: Update kube config
        run: aws eks update-kubeconfig --region eu-west-1 --name multi-k8s

      - name: Apply
        run: |-
          kubectl apply -f k8s
          kubectl set image deployments/server-deployment server=shivisis/multi-server-k8s-gh:${{ env.SHA }}
          kubectl set image deployments/client-deployment client=shivisis/multi-client-k8s-gh:${{ env.SHA }}
          kubectl set image deployments/worker-deployment worker=shivisis/multi-worker-k8s-gh:${{ env.SHA }}

      - name: get deployment
        run: |-
          kubectl get deployments
          kubectl get svc
          kubectl get ns
