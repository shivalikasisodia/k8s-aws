name: Deploy MultiK8s on AWS EKS
on:
  push:
    branches:
      - dev

env:
  SHA: $(git rev-parse HEAD)

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install kubectl
        uses: azure/setup-kubectl@v2.0
        with:
          version: 'v1.28.0' # default is latest stable
        id: install

      - name: Test
        run: |-
          docker build -t shivisis/react-test -f ./client/Dockerfile.dev ./client
          docker run -e CI=true shivisis/react-test npm test

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: eu-west-1


      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build
        run: |-
          docker build -t shivisis/multi-client-k8s-gh:latest -t shivisis/multi-client-k8s-gh:${{ env.SHA }} -f ./client/Dockerfile ./client
          docker build -t shivisis/multi-server-k8s-gh:latest -t shivisis/multi-server-k8s-gh:${{ env.SHA }} -f ./server/Dockerfile ./server
          docker build -t shivisis/multi-worker-k8s-gh:latest -t shivisis/multi-worker-k8s-gh:${{ env.SHA }} -f ./worker/Dockerfile ./worker
  
      - name: Push
        run: |-
          docker push shivisis/multi-client-k8s-gh:latest
          docker push shivisis/multi-server-k8s-gh:latest
          docker push shivisis/multi-worker-k8s-gh:latest

          docker push shivisis/multi-client-k8s-gh:${{ env.SHA }}
          docker push shivisis/multi-server-k8s-gh:${{ env.SHA }}
          docker push shivisis/multi-worker-k8s-gh:${{ env.SHA }}

      - name: Update kube config
        run: |-
          aws eks update-kubeconfig --region ap-south-1 --name multi-k8s
          aws sts get-caller-identity
          kubectl apply -f RoleBinding/ClusterRoleBinding.yaml
          kubectl get svc

      - name: Install efs csi driver
        run: |-
          kubectl apply -k "github.com/kubernetes-sigs/aws-efs-csi-driver/deploy/kubernetes/overlays/stable/?ref=release-1.7"

      - name: Install helm
        run: |-
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
          chmod 700 get_helm.sh
          ./get_helm.sh
      
      - name: Install Ingress-nginx Controller
        run: |-
          helm upgrade --install ingress-nginx ingress-nginx \
            --repo https://kubernetes.github.io/ingress-nginx \
            --namespace ingress-nginx --create-namespace

      - name: Verify Ingress installation
        run: |-          
          kubectl get all --namespace ingress-nginx
          kubectl get svc --namespace ingress-nginx

      - name: Apply manifest files
        run: |-
          kubectl apply -f k8s --namespace ingress-nginx
          kubectl set image deployments/server-deployment server=shivisis/multi-server-k8s-gh:${{ env.SHA }}
          kubectl set image deployments/client-deployment client=shivisis/multi-client-k8s-gh:${{ env.SHA }}
          kubectl set image deployments/worker-deployment worker=shivisis/multi-worker-k8s-gh:${{ env.SHA }}
          

      - name: get deployment
        run: |-
          kubectl get deployments
          kubectl get svc
          kubectl get ns
          kubectl get sc
          kubectl get ing
          kubectl get pv 
          kubectl get pvc
          kubectl get configMap aws-auth -n kube-system -o yaml
